#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: df0e74e2-8a26-4695-9f2a-b897ace9cffc
# Source File: EventLogCollector.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
+fbZ+jvFnf8AKJXHVWI8AAA=#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.127
     Generated on:       8/21/2016 11:49 PM
     Generated by:       jocampo
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2016
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-EventLogCollector_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Define SAPIEN Types
	#----------------------------------------------
	try{
		$local:type = [FolderBrowserModernDialog]
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
		using System;
		using System.Windows.Forms;
		using System.Reflection;

        namespace SAPIENTypes
        {
		    public class FolderBrowserModernDialog : System.Windows.Forms.CommonDialog
            {
                private System.Windows.Forms.OpenFileDialog fileDialog;
                public FolderBrowserModernDialog()
                {
                    fileDialog = new System.Windows.Forms.OpenFileDialog();
                    fileDialog.Filter = "Folders|\n";
                    fileDialog.AddExtension = false;
                    fileDialog.CheckFileExists = false;
                    fileDialog.DereferenceLinks = true;
                    fileDialog.Multiselect = false;
                    fileDialog.Title = "Select a folder";
                }

                public string Title
                {
                    get { return fileDialog.Title; }
                    set { fileDialog.Title = value; }
                }

                public string InitialDirectory
                {
                    get { return fileDialog.InitialDirectory; }
                    set { fileDialog.InitialDirectory = value; }
                }
                
                public string SelectedPath
                {
                    get { return fileDialog.FileName; }
                    set { fileDialog.FileName = value; }
                }

                object InvokeMethod(Type type, object obj, string method, object[] parameters)
                {
                    MethodInfo methInfo = type.GetMethod(method, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);
                    return methInfo.Invoke(obj, parameters);
                }

                bool ShowOriginalBrowserDialog(IntPtr hwndOwner)
                {
                    FolderBrowserDialog folderBrowserDialog = new FolderBrowserDialog();
                    folderBrowserDialog.Description = this.Title;
                    folderBrowserDialog.SelectedPath = !string.IsNullOrEmpty(this.SelectedPath) ? this.SelectedPath : this.InitialDirectory;
                    folderBrowserDialog.ShowNewFolderButton = false;
                    if (folderBrowserDialog.ShowDialog() == DialogResult.OK)
                    {
                        fileDialog.FileName = folderBrowserDialog.SelectedPath;
                        return true;
                    }
                    return false;
                }

                protected override bool RunDialog(IntPtr hwndOwner)
                {
                    if (Environment.OSVersion.Version.Major >= 6)
                    {      
                        try
                        {
                            bool flag = false;
                            System.Reflection.Assembly assembly = Assembly.Load("System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");
                            Type typeIFileDialog = assembly.GetType("System.Windows.Forms.FileDialogNative").GetNestedType("IFileDialog", BindingFlags.NonPublic);
                            uint num = 0;
                            object dialog = InvokeMethod(fileDialog.GetType(), fileDialog, "CreateVistaDialog", null);
                            InvokeMethod(fileDialog.GetType(), fileDialog, "OnBeforeVistaDialog", new object[] { dialog });
                            uint options = (uint)InvokeMethod(typeof(System.Windows.Forms.FileDialog), fileDialog, "GetOptions", null) | (uint)0x20;
                            InvokeMethod(typeIFileDialog, dialog, "SetOptions", new object[] { options });
                            Type vistaDialogEventsType = assembly.GetType("System.Windows.Forms.FileDialog").GetNestedType("VistaDialogEvents", BindingFlags.NonPublic);
                            object pfde = Activator.CreateInstance(vistaDialogEventsType, fileDialog);
                            object[] parameters = new object[] { pfde, num };
                            InvokeMethod(typeIFileDialog, dialog, "Advise", parameters);
                            num = (uint)parameters[1];
                            try
                            {
                                int num2 = (int)InvokeMethod(typeIFileDialog, dialog, "Show", new object[] { hwndOwner });
                                flag = 0 == num2;
                            }
                            finally
                            {
                                InvokeMethod(typeIFileDialog, dialog, "Unadvise", new object[] { num });
                                GC.KeepAlive(pfde);
                            }
                            return flag;
                        }
                        catch
                        {
                            return ShowOriginalBrowserDialog(hwndOwner);
                        }
                    }
                    else
                        return ShowOriginalBrowserDialog(hwndOwner);
                }

                public override void Reset()
                {
                    fileDialog.Reset();
                }
            }
       }
"@ | Out-Null
	}
	#endregion Define SAPIEN Types

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formEventLogCollectorV10 = New-Object 'System.Windows.Forms.Form'
	$statusbar1 = New-Object 'System.Windows.Forms.StatusBar'
	$groupboxExportResults = New-Object 'System.Windows.Forms.GroupBox'
	$buttonExportResults = New-Object 'System.Windows.Forms.Button'
	$checkboxOpenResultsAutomatic = New-Object 'System.Windows.Forms.CheckBox'
	$radiobuttonHTML = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonCSV = New-Object 'System.Windows.Forms.RadioButton'
	$datagridviewDisplayResults = New-Object 'System.Windows.Forms.DataGridView'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonLoad = New-Object 'System.Windows.Forms.Button'
	$ComboboxEventLogSelect = New-Object 'System.Windows.Forms.ComboBox'
	$labelSelectALogToQuery = New-Object 'System.Windows.Forms.Label'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonConnect = New-Object 'System.Windows.Forms.Button'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$labelEnterComputerName = New-Object 'System.Windows.Forms.Label'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$fileToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$closeToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$helpToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$onlineDocumentationToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$aboutToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$errorprovider1 = New-Object 'System.Windows.Forms.ErrorProvider'
	$folderbrowsermoderndialog1 = New-Object 'SAPIENTypes.FolderBrowserModernDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formEventLogCollectorV10_Load={
		#TODO: Initialize Form Controls here
		$script:ComputerName = $env:COMPUTERNAME
		$textbox1.Text = $ComputerName
	}
	
	$buttonConnect_Click={
		#TODO: Place custom script here
		$ComputerName = $textbox1.Text
		try
		{
			Get-EventLog -ComputerName $ComputerName -List -OutVariable Logs -ErrorAction Stop
			$statusbar1.Text = "Successfully connected to the computer $($ComputerName)"
			Load-ComboBox -ComboBox $ComboboxEventLogSelect -Items $Logs.log
		}
		Catch
		{
			$errorprovider1.SetIconAlignment($buttonConnect, 'MiddleLeft')
			$errorprovider1.SetError($buttonConnect,$($_.Exception.Message))
			$statusbar1.Text = "$($ComputerName): $($_.Exception.Message)"
		}
		
	}
	
	#region Control Helper Functions
	function Load-DataGridView
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{	
				$array.Add($Item)	
			}
			$DataGridView.DataSource = $array
		}
		
		$DataGridView.ResumeLayout()
	}
	
	function ConvertTo-DataTable
	{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		[ValidateNotNull()]
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($Table -eq $null)
		{
			$Table = New-Object System.Data.DataTable
		}
	
		if($InputObject-is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		else
		{
			if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
	
				if($InputObject -eq $null){ return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach($item in $InputObject)
				{
					if($item -ne $null)
					{
						$object = $item
						break	
					}
				}
	
				if($object -eq $null) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if($prop.Value -ne $null)
						{
							try{ $type = $prop.Value.GetType() } catch {}
						}
	
						if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
			      			[void]$table.Columns.Add($prop.Name, $type) 
						}
						else #Type info not found
						{ 
							[void]$table.Columns.Add($prop.Name) 	
						}
					}
			    }
				
				if($object -is [System.Data.DataRow])
				{
					foreach($item in $InputObject)
					{	
						$Table.Rows.Add($item)
					}
					return  @(,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()	
			}
			
			foreach($item in $InputObject)
			{		
				$row = $table.NewRow()
				
				if($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
	
		return @(,$Table)	
	}
	
	function Load-ComboBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
	
		.PARAMETER  ComboBox
			The ComboBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ComboBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red" -Append
			Load-ComboBox $combobox1 "White" -Append
			Load-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Load-ComboBox $combobox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$checkboxOpenResultsAutomatic_CheckedChanged={
		#TODO: Place custom script here
		
	}
	
	$labelEnterComputerName_Click={
		#TODO: Place custom script here
		
	}
	
	$textbox1_TextChanged={
		#TODO: Place custom script here
		
	}
	
	$ComboboxEventLogSelect_SelectedIndexChanged={
		#TODO: Place custom script here
		
	}
	
	$menustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
		#TODO: Place custom script here
		
	}
	
	$buttonLoad_Click={
		#TODO: Place custom script here
		
		$datagridviewDisplayResults.AutoSizeColumnsMode = 'Fill'
		try
		{
			$script:LogsQueried = Get-EventLog -ComputerName $ComputerName -LogName $($ComboboxEventLogSelect.SelectedItem) -Newest 10 | Select-Object EventId, EntryType, Message
			Load-DataGridView -DataGridView $datagridviewDisplayResults -Item $LogsQueried
			$statusbar1.Text = "Successfully queried the $($ComboboxEventLogSelect.SelectedItem) Log into the DataGridView"
		}
		
		catch
		{
			$statusbar1.Text = "$($ComboboxEventLogSelect.SelectedItem) : $($_.Exception.Message)"
			
			
		}
		
		
	}
	
	$datagridviewDisplayResults_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
		#TODO: Place custom script here
		
	}
	
	$buttonExportResults_Click={
		#TODO: Place custom script here
		
		$folderbrowsermoderndialog1.InitialDirectory = "D:\TempScripts"
		
		if ($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
		{
			$SelectedPath = $folderbrowsermoderndialog1.SelectedPath		
			
		}
		
		if ($radiobuttonCSV.Checked)
		{
			$LogsQueried | Export-Csv -NoTypeInformation -Path "$SelectedPath\Results.csv"
			$statusbar1.Text = "Results are exported to the $SelectedPath\Results.csv file"
			
			if ($checkboxOpenResultsAutomatic.Checked)
			{
				Invoke-Item -Path "$SelectedPath\Results.csv"
			}
		}
		
		if ($radiobuttonHTML.Checked)
		{
			$LogsQueried | ConvertTo-Html | Out-File -FilePath "$SelectedPath\Results.html"
			$statusbar1.Text = "Results are exported to the $SelectedPath\Results.html file"
			
			if ($checkboxOpenResultsAutomatic.Checked)
			{
				Invoke-Item -Path "$SelectedPath\Results.html"
			}
		}
		
		
	}
	
	$closeToolStripMenuItem_Click={
		#TODO: Place custom script here
		$formEventLogCollectorV10.Close()
	}
	
	$onlineDocumentationToolStripMenuItem_Click={
		#TODO: Place custom script here
		Start-Process -FilePath "www.pluralsight.com"
	}
	
	$aboutToolStripMenuItem_Click={
		#TODO: Place custom script here
		#------------------------------------------------------------------------
		# Source File Information (DO NOT MODIFY)
		# Source ID: 946034f2-7228-4be0-b10e-ca14e286455f
		# Source File: C:\Users\jocampo\OneDrive\Documents\Scripts\_PluralSight\Creating GUIs Using PS Studio 2015 - The Essentials\About.psf
		#------------------------------------------------------------------------
		
	<#
	    .NOTES
	    --------------------------------------------------------------------------------
	     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.127
	     Generated on:       8/21/2016 10:48 PM
	     Generated by:       jocampo
	    --------------------------------------------------------------------------------
	    .DESCRIPTION
	        GUI script generated by PowerShell Studio 2016
	#>
		#----------------------------------------------
		#region Application Functions
		#----------------------------------------------
		
		#endregion Application Functions
		
		#----------------------------------------------
		# Generated Form Function
		#----------------------------------------------
		function Call-About_psf
		{
			
			#----------------------------------------------
			#region Import the Assemblies
			#----------------------------------------------
			[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
			#endregion Import Assemblies
			
			#----------------------------------------------
			#region Generated Form Objects
			#----------------------------------------------
			[System.Windows.Forms.Application]::EnableVisualStyles()
			$formAbout = New-Object 'System.Windows.Forms.Form'
			$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
			$buttonOK = New-Object 'System.Windows.Forms.Button'
			$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
			#endregion Generated Form Objects
			
			#----------------------------------------------
			# User Generated Script
			#----------------------------------------------
			
			$formAbout_Load = {
				#TODO: Initialize Form Controls here
				
			}
			
			# --End User Generated Script--
			#----------------------------------------------
			#region Generated Events
			#----------------------------------------------
			
			$Form_StateCorrection_Load =
			{
				#Correct the initial state of the form to prevent the .Net maximized form issue
				$formAbout.WindowState = $InitialFormWindowState
			}
			
			$Form_Cleanup_FormClosed =
			{
				#Remove all event handlers from the controls
				try
				{
					$formAbout.remove_Load($formAbout_Load)
					$formAbout.remove_Load($Form_StateCorrection_Load)
					$formAbout.remove_FormClosed($Form_Cleanup_FormClosed)
				}
				catch [Exception]
				{ }
			}
			#endregion Generated Events
			
			#----------------------------------------------
			#region Generated Form Code
			#----------------------------------------------
			$formAbout.SuspendLayout()
			#
			# formAbout
			#
			$formAbout.Controls.Add($picturebox1)
			$formAbout.Controls.Add($buttonOK)
			$formAbout.AcceptButton = $buttonOK
			$formAbout.AutoScaleDimensions = '8, 20'
			$formAbout.AutoScaleMode = 'Font'
			$formAbout.ClientSize = '379, 403'
			$formAbout.Font = 'Segoe UI, 11.25pt'
			$formAbout.FormBorderStyle = 'FixedDialog'
			$formAbout.Margin = '4, 5, 4, 5'
			$formAbout.MaximizeBox = $False
			$formAbout.MinimizeBox = $False
			$formAbout.Name = 'formAbout'
			$formAbout.StartPosition = 'CenterScreen'
			$formAbout.Text = 'About'
			$formAbout.add_Load($formAbout_Load)
			#
			# picturebox1
			#
			#region Binary Data
			$picturebox1.Image = [System.Convert]::FromBase64String('
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
r6GEJpCOpt0J2hHbGEPMN47jqOun/9k=')
			#endregion
			$picturebox1.Location = '30, 19'
			$picturebox1.Margin = '4, 5, 4, 5'
			$picturebox1.Name = 'picturebox1'
			$picturebox1.Size = '316, 301'
			$picturebox1.TabIndex = 1
			$picturebox1.TabStop = $False
			#
			# buttonOK
			#
			$buttonOK.Anchor = 'Bottom, Right'
			$buttonOK.DialogResult = 'OK'
			$buttonOK.Location = '263, 349'
			$buttonOK.Margin = '4, 5, 4, 5'
			$buttonOK.Name = 'buttonOK'
			$buttonOK.Size = '100, 35'
			$buttonOK.TabIndex = 0
			$buttonOK.Text = '&OK'
			$buttonOK.UseVisualStyleBackColor = $True
			$formAbout.ResumeLayout()
			#endregion Generated Form Code
			
			#----------------------------------------------
			
			#Save the initial state of the form
			$InitialFormWindowState = $formAbout.WindowState
			#Init the OnLoad event to correct the initial state of the form
			$formAbout.add_Load($Form_StateCorrection_Load)
			#Clean up the control events
			$formAbout.add_FormClosed($Form_Cleanup_FormClosed)
			#Show the Form
			return $formAbout.ShowDialog()
			
		} #End Function
		
		#Call the form
		Call-About_psf | Out-Null
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formEventLogCollectorV10.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonExportResults.remove_Click($buttonExportResults_Click)
			$checkboxOpenResultsAutomatic.remove_CheckedChanged($checkboxOpenResultsAutomatic_CheckedChanged)
			$datagridviewDisplayResults.remove_CellContentClick($datagridviewDisplayResults_CellContentClick)
			$buttonLoad.remove_Click($buttonLoad_Click)
			$ComboboxEventLogSelect.remove_SelectedIndexChanged($ComboboxEventLogSelect_SelectedIndexChanged)
			$buttonConnect.remove_Click($buttonConnect_Click)
			$textbox1.remove_TextChanged($textbox1_TextChanged)
			$labelEnterComputerName.remove_Click($labelEnterComputerName_Click)
			$menustrip1.remove_ItemClicked($menustrip1_ItemClicked)
			$formEventLogCollectorV10.remove_Load($formEventLogCollectorV10_Load)
			$closeToolStripMenuItem.remove_Click($closeToolStripMenuItem_Click)
			$onlineDocumentationToolStripMenuItem.remove_Click($onlineDocumentationToolStripMenuItem_Click)
			$aboutToolStripMenuItem.remove_Click($aboutToolStripMenuItem_Click)
			$formEventLogCollectorV10.remove_Load($Form_StateCorrection_Load)
			$formEventLogCollectorV10.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formEventLogCollectorV10.SuspendLayout()
	$groupboxExportResults.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox1.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# formEventLogCollectorV10
	#
	$formEventLogCollectorV10.Controls.Add($statusbar1)
	$formEventLogCollectorV10.Controls.Add($groupboxExportResults)
	$formEventLogCollectorV10.Controls.Add($datagridviewDisplayResults)
	$formEventLogCollectorV10.Controls.Add($groupbox2)
	$formEventLogCollectorV10.Controls.Add($groupbox1)
	$formEventLogCollectorV10.Controls.Add($menustrip1)
	$formEventLogCollectorV10.AutoScaleDimensions = '7, 17'
	$formEventLogCollectorV10.AutoScaleMode = 'Font'
	$formEventLogCollectorV10.ClientSize = '573, 667'
	$formEventLogCollectorV10.Font = 'Segoe UI, 9.75pt'
	$formEventLogCollectorV10.MainMenuStrip = $menustrip1
	$formEventLogCollectorV10.Margin = '4, 4, 4, 4'
	$formEventLogCollectorV10.Name = 'formEventLogCollectorV10'
	$formEventLogCollectorV10.StartPosition = 'CenterScreen'
	$formEventLogCollectorV10.Text = 'Event Log Collector v.1.0'
	$formEventLogCollectorV10.add_Load($formEventLogCollectorV10_Load)
	#
	# statusbar1
	#
	$statusbar1.Location = '0, 628'
	$statusbar1.Margin = '4, 4, 4, 4'
	$statusbar1.Name = 'statusbar1'
	$statusbar1.Size = '573, 39'
	$statusbar1.TabIndex = 4
	$statusbar1.Text = 'Event Log Collector v1.0'
	#
	# groupboxExportResults
	#
	$groupboxExportResults.Controls.Add($buttonExportResults)
	$groupboxExportResults.Controls.Add($checkboxOpenResultsAutomatic)
	$groupboxExportResults.Controls.Add($radiobuttonHTML)
	$groupboxExportResults.Controls.Add($radiobuttonCSV)
	$groupboxExportResults.Location = '28, 479'
	$groupboxExportResults.Margin = '4, 4, 4, 4'
	$groupboxExportResults.Name = 'groupboxExportResults'
	$groupboxExportResults.Padding = '4, 4, 4, 4'
	$groupboxExportResults.Size = '516, 100'
	$groupboxExportResults.TabIndex = 3
	$groupboxExportResults.TabStop = $False
	$groupboxExportResults.Text = 'Step 4: Export Results'
	#
	# buttonExportResults
	#
	$buttonExportResults.Location = '345, 37'
	$buttonExportResults.Margin = '4, 4, 4, 4'
	$buttonExportResults.Name = 'buttonExportResults'
	$buttonExportResults.Size = '117, 26'
	$buttonExportResults.TabIndex = 3
	$buttonExportResults.Text = 'Export Results'
	$buttonExportResults.UseVisualStyleBackColor = $True
	$buttonExportResults.add_Click($buttonExportResults_Click)
	#
	# checkboxOpenResultsAutomatic
	#
	$checkboxOpenResultsAutomatic.Location = '152, 40'
	$checkboxOpenResultsAutomatic.Margin = '4, 4, 4, 4'
	$checkboxOpenResultsAutomatic.Name = 'checkboxOpenResultsAutomatic'
	$checkboxOpenResultsAutomatic.Size = '229, 23'
	$checkboxOpenResultsAutomatic.TabIndex = 2
	$checkboxOpenResultsAutomatic.Text = 'Open Results Automatically'
	$checkboxOpenResultsAutomatic.UseVisualStyleBackColor = $True
	$checkboxOpenResultsAutomatic.add_CheckedChanged($checkboxOpenResultsAutomatic_CheckedChanged)
	#
	# radiobuttonHTML
	#
	$radiobuttonHTML.Location = '75, 40'
	$radiobuttonHTML.Margin = '4, 4, 4, 4'
	$radiobuttonHTML.Name = 'radiobuttonHTML'
	$radiobuttonHTML.Size = '74, 18'
	$radiobuttonHTML.TabIndex = 1
	$radiobuttonHTML.TabStop = $True
	$radiobuttonHTML.Text = 'HTML'
	$radiobuttonHTML.UseVisualStyleBackColor = $True
	#
	# radiobuttonCSV
	#
	$radiobuttonCSV.Location = '15, 36'
	$radiobuttonCSV.Margin = '4, 4, 4, 4'
	$radiobuttonCSV.Name = 'radiobuttonCSV'
	$radiobuttonCSV.Size = '78, 27'
	$radiobuttonCSV.TabIndex = 0
	$radiobuttonCSV.TabStop = $True
	$radiobuttonCSV.Text = 'CSV'
	$radiobuttonCSV.UseVisualStyleBackColor = $True
	#
	# datagridviewDisplayResults
	#
	$datagridviewDisplayResults.AutoSizeColumnsMode = 'Fill'
	$datagridviewDisplayResults.BackgroundColor = 'White'
	$datagridviewDisplayResults.ColumnHeadersHeightSizeMode = 'AutoSize'
	$datagridviewDisplayResults.Location = '29, 301'
	$datagridviewDisplayResults.Margin = '4, 4, 4, 4'
	$datagridviewDisplayResults.Name = 'datagridviewDisplayResults'
	$datagridviewDisplayResults.Size = '515, 167'
	$datagridviewDisplayResults.TabIndex = 2
	$datagridviewDisplayResults.add_CellContentClick($datagridviewDisplayResults_CellContentClick)
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($buttonLoad)
	$groupbox2.Controls.Add($ComboboxEventLogSelect)
	$groupbox2.Controls.Add($labelSelectALogToQuery)
	$groupbox2.Location = '29, 160'
	$groupbox2.Margin = '4, 4, 4, 4'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Padding = '4, 4, 4, 4'
	$groupbox2.Size = '515, 128'
	$groupbox2.TabIndex = 1
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Step 2. Event Log Selection'
	#
	# buttonLoad
	#
	$buttonLoad.Location = '391, 28'
	$buttonLoad.Margin = '4, 4, 4, 4'
	$buttonLoad.Name = 'buttonLoad'
	$buttonLoad.Size = '81, 25'
	$buttonLoad.TabIndex = 2
	$buttonLoad.Text = 'Load'
	$buttonLoad.UseVisualStyleBackColor = $True
	$buttonLoad.add_Click($buttonLoad_Click)
	#
	# ComboboxEventLogSelect
	#
	$ComboboxEventLogSelect.FormattingEnabled = $True
	$ComboboxEventLogSelect.Location = '163, 29'
	$ComboboxEventLogSelect.Margin = '4, 4, 4, 4'
	$ComboboxEventLogSelect.Name = 'ComboboxEventLogSelect'
	$ComboboxEventLogSelect.Size = '217, 25'
	$ComboboxEventLogSelect.TabIndex = 1
	$ComboboxEventLogSelect.Text = 'Combobox Select Log'
	$ComboboxEventLogSelect.add_SelectedIndexChanged($ComboboxEventLogSelect_SelectedIndexChanged)
	#
	# labelSelectALogToQuery
	#
	$labelSelectALogToQuery.AutoSize = $True
	$labelSelectALogToQuery.Location = '13, 30'
	$labelSelectALogToQuery.Margin = '4, 0, 4, 0'
	$labelSelectALogToQuery.Name = 'labelSelectALogToQuery'
	$labelSelectALogToQuery.Size = '135, 17'
	$labelSelectALogToQuery.TabIndex = 0
	$labelSelectALogToQuery.Text = 'Select a Log to query:'
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($buttonConnect)
	$groupbox1.Controls.Add($textbox1)
	$groupbox1.Controls.Add($labelEnterComputerName)
	$groupbox1.Location = '28, 60'
	$groupbox1.Margin = '4, 4, 4, 4'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Padding = '4, 4, 4, 4'
	$groupbox1.Size = '516, 78'
	$groupbox1.TabIndex = 0
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Step 1: Computer Name Input'
	#
	# buttonConnect
	#
	$buttonConnect.Location = '408, 24'
	$buttonConnect.Margin = '4, 4, 4, 4'
	$buttonConnect.Name = 'buttonConnect'
	$buttonConnect.Size = '73, 22'
	$buttonConnect.TabIndex = 2
	$buttonConnect.Text = 'Connect'
	$buttonConnect.UseVisualStyleBackColor = $True
	$buttonConnect.add_Click($buttonConnect_Click)
	#
	# textbox1
	#
	$textbox1.Location = '165, 22'
	$textbox1.Margin = '4, 4, 4, 4'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = '217, 25'
	$textbox1.TabIndex = 1
	$textbox1.Text = 'Textbox Computer Name Input'
	$textbox1.add_TextChanged($textbox1_TextChanged)
	#
	# labelEnterComputerName
	#
	$labelEnterComputerName.AutoSize = $True
	$labelEnterComputerName.Location = '10, 25'
	$labelEnterComputerName.Margin = '4, 0, 4, 0'
	$labelEnterComputerName.Name = 'labelEnterComputerName'
	$labelEnterComputerName.Size = '139, 17'
	$labelEnterComputerName.TabIndex = 0
	$labelEnterComputerName.Text = 'Enter Computer name:'
	$labelEnterComputerName.add_Click($labelEnterComputerName_Click)
	#
	# menustrip1
	#
	[void]$menustrip1.Items.Add($fileToolStripMenuItem)
	[void]$menustrip1.Items.Add($helpToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Padding = '7, 3, 0, 3'
	$menustrip1.Size = '573, 25'
	$menustrip1.TabIndex = 5
	$menustrip1.Text = 'menustrip1'
	$menustrip1.add_ItemClicked($menustrip1_ItemClicked)
	#
	# fileToolStripMenuItem
	#
	[void]$fileToolStripMenuItem.DropDownItems.Add($closeToolStripMenuItem)
	$fileToolStripMenuItem.Name = 'fileToolStripMenuItem'
	$fileToolStripMenuItem.Size = '37, 19'
	$fileToolStripMenuItem.Text = 'File'
	#
	# closeToolStripMenuItem
	#
	$closeToolStripMenuItem.Name = 'closeToolStripMenuItem'
	$closeToolStripMenuItem.Size = '152, 22'
	$closeToolStripMenuItem.Text = 'Close'
	$closeToolStripMenuItem.add_Click($closeToolStripMenuItem_Click)
	#
	# helpToolStripMenuItem
	#
	[void]$helpToolStripMenuItem.DropDownItems.Add($onlineDocumentationToolStripMenuItem)
	[void]$helpToolStripMenuItem.DropDownItems.Add($aboutToolStripMenuItem)
	$helpToolStripMenuItem.Name = 'helpToolStripMenuItem'
	$helpToolStripMenuItem.Size = '44, 19'
	$helpToolStripMenuItem.Text = 'Help'
	#
	# onlineDocumentationToolStripMenuItem
	#
	$onlineDocumentationToolStripMenuItem.Name = 'onlineDocumentationToolStripMenuItem'
	$onlineDocumentationToolStripMenuItem.Size = '195, 22'
	$onlineDocumentationToolStripMenuItem.Text = 'Online Documentation'
	$onlineDocumentationToolStripMenuItem.add_Click($onlineDocumentationToolStripMenuItem_Click)
	#
	# aboutToolStripMenuItem
	#
	$aboutToolStripMenuItem.Name = 'aboutToolStripMenuItem'
	$aboutToolStripMenuItem.Size = '195, 22'
	$aboutToolStripMenuItem.Text = 'About'
	$aboutToolStripMenuItem.add_Click($aboutToolStripMenuItem_Click)
	#
	# errorprovider1
	#
	$errorprovider1.ContainerControl = $formEventLogCollectorV10
	#
	# folderbrowsermoderndialog1
	#
	$menustrip1.ResumeLayout()
	$groupbox1.ResumeLayout()
	$groupbox2.ResumeLayout()
	$groupboxExportResults.ResumeLayout()
	$formEventLogCollectorV10.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formEventLogCollectorV10.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formEventLogCollectorV10.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formEventLogCollectorV10.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formEventLogCollectorV10.ShowDialog()

} #End Function

#Call the form
Call-EventLogCollector_psf | Out-Null
